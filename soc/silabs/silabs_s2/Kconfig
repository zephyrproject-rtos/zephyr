# Copyright (c) 2024 GARDENA GmbH
# SPDX-License-Identifier: Apache-2.0

if SOC_FAMILY_SILABS_S2

config SOC_FAMILY_SILABS_S2
	select HAS_SEGGER_RTT if ZEPHYR_SEGGER_MODULE
	select BUILD_OUTPUT_HEX
	select SOC_PREP_HOOK
	select SOC_EARLY_INIT_HOOK
	select HAS_SILABS_SISDK

config SOC_SILABS_IMAGE_PROPERTIES
	bool "Include application properties data structure in image"
	default y if MCUBOOT
	help
	  Include the Silicon Labs application properties data structure in the
	  the firmware image. This allows the SE and Gecko bootloader to access
	  information about the image, such as its version and capabilities. If
	  MCUboot is used, only the MCUboot image itself needs the image
	  properties data structure to enable the SE to perform secure boot
	  verification of the bootloader. MCUboot uses its own TLV format to
	  verify the application. If Gecko bootloader is used, the Zephyr
	  application image also needs the data structure.

config CRYPTO_ACC_GECKO_TRNG
	bool
	help
	  Enable Entropy driver based on the CRYPTO_ACC module for Silicon Labs
	  Gecko chips.

if PM
config SOC_SILABS_PM_LOW_INTERRUPT_LATENCY
	bool "Low interrupt latency mode"
	default y
	help
	  Enabling low interrupt latency allows interrupts to be executed
	  before the high frequency clock is restored after sleep.
endif

rsource "*/Kconfig"

config ARM_SECURE_FIRMWARE
	default y

config SILABS_DEVICE_IS_MODULE
	bool
	default n

# Hardware capability flags (auto-detected from Device Tree)
# Bluetooth 5.0
config HAS_HW_EFR32_RADIO_BLE_2M
	def_bool $(dt_nodelabel_has_prop,radio,ble-2mbps-supported)

config HAS_HW_EFR32_RADIO_BLE_CODED
	def_bool $(dt_nodelabel_has_prop,radio,ble-coded-phy-supported)

# Bluetooth 5.1
config HAS_HW_EFR32_RADIO_CTE_TX
	def_bool $(dt_nodelabel_has_prop,radio,ble-cte-tx-supported)

config HAS_HW_EFR32_RADIO_CTE_RX
	def_bool $(dt_nodelabel_has_prop,radio,ble-cte-rx-supported) && HAS_HW_EFR32_RADIO_CTE_TX

# Bluetooth 6.0
config HAS_HW_EFR32_RADIO_CS
	def_bool $(dt_nodelabel_has_prop,radio,ble-cs-supported)

# Vendor-specific
config HAS_HW_EFR32_RADIO_TX_HIGH_POWER
	def_bool $(dt_nodelabel_has_prop,radio,radio-tx-high-power-supported)

endif
