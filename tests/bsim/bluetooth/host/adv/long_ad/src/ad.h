/*
 * Copyright (c) 2024 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include <stdint.h>

static const uint8_t test_ad1[] = {
	0xe9, 0xff, 0x7c, 0xe8, 0x40, 0x60, 0x3a, 0x10, 0x43, 0xba, 0x2e, 0x75, 0xbd, 0x0a, 0x07,
	0xe2, 0xf1, 0x61, 0x56, 0xea, 0xc1, 0x70, 0x98, 0x6f, 0x8a, 0xb1, 0x74, 0x52, 0x43, 0x6f,
	0x47, 0xbf, 0x81, 0x95, 0x60, 0xe7, 0x80, 0x68, 0x9a, 0x16, 0xe9, 0xa8, 0x61, 0x03, 0x3a,
	0x3e, 0xc1, 0x8e, 0x2a, 0xde, 0x27, 0x9b, 0xaa, 0xe7, 0x7d, 0x79, 0x20, 0x5e, 0xd0, 0x4a,
	0xb3, 0xd7, 0x5a, 0x3c, 0xfc, 0x1b, 0x6e, 0xd6, 0x19, 0x3b, 0xa7, 0x94, 0xc1, 0xeb, 0x1e,
	0x6c, 0x94, 0x76, 0x6f, 0x45, 0x0f, 0x72, 0x22, 0xbf, 0x3c, 0x4a, 0xaf, 0x0f, 0xf8, 0x82,
	0xa6, 0xa6, 0x2a, 0x9f, 0x15, 0x93, 0x38, 0x5b, 0x71, 0xec, 0x0d, 0xed, 0xfe, 0x26, 0x8a,
	0xca, 0x2b, 0x29, 0x9a, 0x55, 0x9d, 0x14, 0xf1, 0x21, 0x10, 0xa4, 0x05, 0x5f, 0xf8, 0x46,
	0x73, 0x90, 0xc3, 0x62, 0x46, 0x57, 0x36, 0x65, 0xfc, 0x98, 0xc1, 0xe5, 0xc6, 0xcd, 0x58,
	0xc0, 0xa9, 0x97, 0x76, 0x43, 0x8c, 0x84, 0xac, 0xa2, 0x84, 0xe3, 0xe0, 0x45, 0x1c, 0xb9,
	0xc2, 0x44, 0xdc, 0xbc, 0x15, 0x3c, 0x81, 0x0f, 0x65, 0x13, 0xc6, 0xe1, 0x8b, 0x74, 0xb1,
	0x1f, 0x54, 0x67, 0xfc, 0x1d, 0x72, 0x4d, 0x4f, 0x29, 0x61, 0x4c, 0xf9, 0x3f, 0xfc, 0x98,
	0xf6, 0x00, 0xbe, 0xfd, 0x17, 0x51, 0x86, 0x21, 0x83, 0x32, 0x87, 0xed, 0xdf, 0xb9, 0xc1,
	0xc9, 0xe7, 0x3a, 0xe7, 0x12, 0x19, 0x98, 0x2e, 0x9d, 0xcc, 0xa8, 0xa9, 0x94, 0xe9, 0x31,
	0xb1, 0xa0, 0xf0, 0xd1, 0x72, 0x1c, 0xfe, 0x21, 0xa0, 0xb9, 0xf0, 0x47, 0x15, 0xa1, 0x1a,
	0x7a, 0x80, 0xac, 0x0d, 0x2b, 0xa7, 0x7a, 0x2f, 0x22, 0x97, 0xff, 0x45, 0x13, 0xaf, 0xb9,
	0x82, 0x68, 0xfc, 0x52, 0xd1, 0xff, 0xc5, 0x03, 0x01, 0xc1, 0x21, 0xd3, 0xfc, 0xb1, 0xcd,
	0x65, 0xd5, 0x7e, 0x1b, 0x81, 0x7c, 0x62, 0x7d, 0x24, 0x9e, 0xfa, 0xe7, 0x12, 0x01, 0x9a,
	0x19, 0x11, 0xa7, 0x50, 0x40, 0x1b, 0x99, 0xb9, 0xf4, 0x17, 0xbe, 0xbe, 0x8d, 0xaa, 0xde,
	0xdd, 0xba, 0xfe, 0xb2, 0x76, 0x50, 0x99, 0xb4, 0xf4, 0x0e, 0x8e, 0xea, 0x8e, 0x90, 0x2e,
	0x77, 0xc9, 0xd2, 0xa9, 0xe2, 0xd5, 0xdb, 0x51, 0x77, 0xf4, 0x87, 0xb8, 0xb7, 0xc9, 0x0b,
	0x8e, 0x3c, 0x7c, 0x8e, 0xf6, 0x0a, 0xb1, 0x26, 0x25, 0xba, 0x73, 0x09, 0x25, 0x14, 0x32,
	0xd9, 0xba, 0x2c, 0x52, 0xd2, 0x9a, 0xfc, 0xae, 0xd6, 0xcc, 0x9d, 0xc3, 0xf9, 0x4e, 0x1a,
	0x37, 0x15, 0x3f, 0x1b, 0x86, 0x6a, 0x0a, 0x08, 0xe6, 0x1e, 0xcc, 0xf6, 0xe6, 0xca, 0x19,
	0x93, 0x61, 0x5f, 0x32, 0x34, 0x4b, 0xc6, 0x3d, 0x3d, 0x21, 0x66, 0x82, 0xaa, 0x68, 0x4d,
	0x08, 0x4b, 0x6d, 0x34, 0x98, 0x28, 0xdd, 0xa5, 0xae, 0x43, 0xe3,
};
BUILD_ASSERT(sizeof(test_ad1) > CONFIG_BT_CTLR_ADV_DATA_LEN_MAX);

static const uint8_t test_ad2[] = {
	0xff, 0xff, 0x1d, 0x10, 0x11, 0x25, 0x2c, 0x1b, 0x9a, 0x18, 0xb3, 0xea, 0x99, 0x70, 0x93,
	0x4e, 0x5b, 0x93, 0x27, 0x86, 0xd9, 0x03, 0xf4, 0x22, 0x32, 0x09, 0x37, 0xed, 0x80, 0xe1,
	0xb2, 0xb8, 0x0d, 0x33, 0x70, 0x1e, 0xf1, 0x22, 0x73, 0xe5, 0xea, 0x33, 0x51, 0x98, 0x72,
	0x0a, 0xfc, 0x99, 0xbf, 0xe5, 0x28, 0x09, 0x7e, 0x7b, 0xab, 0xbb, 0xad, 0xc9, 0x92, 0x54,
	0x2d, 0xcd, 0x9c, 0x24, 0xba, 0x06, 0xa4, 0xbc, 0xad, 0x47, 0x7a, 0xa2, 0xac, 0x06, 0xb1,
	0xa6, 0xc5, 0x9c, 0x46, 0x5c, 0xdf, 0x74, 0x60, 0xa9, 0xa8, 0xe1, 0x7f, 0x48, 0x2e, 0x34,
	0xcc, 0xd2, 0x20, 0x4e, 0x7a, 0xa1, 0x2c, 0x3a, 0x84, 0x0b, 0x34, 0x39, 0xd5, 0x6f, 0x85,
	0x44, 0xf3, 0x93, 0xc0, 0xe5, 0x3e, 0xc0, 0x26, 0xa0, 0xe4, 0x21, 0xac, 0xf8, 0xa0, 0x19,
	0xb6, 0xdd, 0xe7, 0xb7, 0x44, 0x25, 0x42, 0x70, 0xf2, 0xb2, 0x36, 0x75, 0x77, 0xbb, 0x8c,
	0x86, 0x9f, 0x58, 0x29, 0xa9, 0xcd, 0xa3, 0x2b, 0x40, 0x53, 0x87, 0xd5, 0xe6, 0x14, 0x9f,
	0xec, 0x71, 0x9a, 0x75, 0x04, 0x50, 0xab, 0x9b, 0x46, 0x53, 0xdf, 0x95, 0xd8, 0xb6, 0x67,
	0xc9, 0x6b, 0x83, 0x36, 0x94, 0x67, 0x62, 0x98, 0xb8, 0xd8, 0xc1, 0x88, 0xa0, 0x3c, 0x98,
	0xbb, 0xd1, 0x68, 0x20, 0x26, 0x48, 0x89, 0x94, 0xca, 0x8b, 0xe2, 0x1d, 0xb4, 0xb5, 0xc0,
	0xef, 0x4f, 0xa7, 0x19, 0xaa, 0xd1, 0x95, 0xb2, 0x23, 0x88, 0xd0, 0x5a, 0x5a, 0x5d, 0xad,
	0x7e, 0x1e, 0x68, 0xd1, 0xa0, 0x64, 0xd1, 0xf9, 0x59, 0x72, 0xde, 0x00, 0x90, 0x49, 0x97,
	0xb3, 0x50, 0xdf, 0xb5, 0x15, 0x41, 0x72, 0x8c, 0x32, 0x66, 0xff, 0x4b, 0x2f, 0xd6, 0x89,
	0x97, 0x52, 0xd8, 0xba, 0xb2, 0xd0, 0x5b, 0x11, 0x8b, 0x38, 0xa2, 0x42, 0xfb, 0x47, 0xfe,
	0xb5, 0x09, 0x09, 0xf0, 0x9f, 0x94, 0xb5, 0xf0, 0x9f, 0xa6, 0xb7,
};
BUILD_ASSERT(sizeof(test_ad2) == CONFIG_BT_CTLR_ADV_DATA_LEN_MAX);
