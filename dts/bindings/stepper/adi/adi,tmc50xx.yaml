# SPDX-FileCopyrightText: Copyright (c) 2024 Carl Zeiss Meditec AG
# SPDX-License-Identifier: Apache-2.0

description: |
  Analog Devices TMC50XX Stepper Motor Controller

  Example:

    &spi0 {
        /* SPI bus options here, not shown */

        /* Dual controller/driver for up to two 2-phase bipolar stepper motors */
        tmc50xx: tmc50xx@0 {
            compatible = "adi,tmc50xx";
            reg = <0>;
            spi-max-frequency = <DT_FREQ_M(8)>; /* Maximum SPI bus frequency */

            poscmp-enable; test-mode; lock-gconf; /* ADI TMC Global configuration flags */
            clock-frequency = <DT_FREQ_M(16)>; /* Internal/External Clock frequency */

            /* common stepper controller settings */
            tmc50xx_0_stepper_driver: tmc50xx_0_stepper_driver {
              idx = <0>;
              compatible = "adi,tmc50xx-stepper-driver";
              micro-step-res = <256>;
              /* ADI TMC stallguard settings specific to TMC50XX */
              stallguard2-threshold=<30>;
            };

            /* ADI TMC ramp generator as well as current settings */
            tmc50xx_0_motion_controller: tmc50xx_0_motion_controller {
              idx = <0>;
              compatible = "adi,tmc50xx-motion-controller";
              vstart = <1000>;
              vstop = <10>;
              a1 = <10000>;
              v1 = <50000>;
              d1 = <14000>;
              vmax = <900000>;
              amax = <50000>;
              dmax = <7000>;
              tzerowait = <100>;
              vhigh = <900000>;
              vcoolthrs = <900000>;
              ihold = <1>;
              irun = <10>;
              iholddelay = <1>;
              activate-stallguard2;
              stallguard-velocity-check-interval-ms=<1000>;
              stallguard-threshold-velocity=<200000>;
            };
        };
    };


compatible: "adi,tmc50xx"

include:
  - name: spi-device.yaml
  - name: adi,trinamic-gconf.yaml
    property-allowlist:
      - poscmp-enable
      - test-mode
      - lock-gconf

properties:
  clock-frequency:
    type: int
    required: true
    description: |
      The frequency of the clock signal provided to the TMC50XX.
      This is used for real world conversion.

      Hint: µstep velocity v[Hz] µsteps / s v[Hz] = v[50xx] * ( fCLK[Hz]/2 / 2^23 )
            where v[50xx] is the value written to the TMC50XX.

  shaft1:
    type: boolean
    description: |
      Inverse motor 1 direction

  shaft2:
    type: boolean
    description: |
      Inverse motor 2 direction

child-binding:
  include:
    - name: base.yaml
      property-allowlist:
        - reg
