# Copyright (c) 2025 Advanced Micro Devices, Inc.
#
# SPDX-License-Identifier: Apache-2.0

proc rpu0_core0_rst { {mem "default"} } {
	targets -set -filter {name =~ "DAP*"}
	#CRL write protect
	mwr -force 0xeb5e001c 0x0
	mwr -force 0xEB580000 1
	mwr -force 0xbbf20000 0xeafffffe
	# write BASE_HI and BASE_LO
        if {$mem eq "ddr"} {
            set addr 0x100000
        } elseif {$mem eq "tcm"} {
            set addr 0x0
        } elseif {$mem eq "default"} {
            set addr 0xbbf20000
        }
	mwr -force 0xEB588008 $addr
	# write TCMBOOT as one
	mask_write 0xEB588000 0x10 0x10
	# reset CORE0A_RESET out of reset A_TOPRESET and CORE0A_POR
	mask_write 0xEB5E0310 0x10101 0x1
	# out of reset CORE0A_RESET
	mask_write 0xEB5E0310 0x1 0x0
	targets -set -filter {name =~ "Cortex-R52*0" && parent =~ "*0x00100000"}
	after 300
	stop
	after 1000
	ta
}


proc load_image args  {
	set elf_file [lindex $args 0]

	if { [info exists ::env(HW_SERVER_URL)] } {
		connect -url $::env(HW_SERVER_URL)
	} else {
		connect
	}

	if { [info exists ::env(PDI_FILE_PATH)] } {
		device program $::env(PDI_FILE_PATH)
	} else {
		puts "Error: env variable PDI_FILE_PATH is not set"
		exit
	}

	if { [info exists ::env(HW_SERVER_URL)] } {
		set hw_server_url [split $::env(HW_SERVER_URL) ":"]
		set host [lindex $hw_server_url 0]
		set port [lindex $hw_server_url 1]
		disconnect
		after 2000
		connect -host $host -port $port
		after 3000
		ta
	}
	after 1000
	targets -set -nocase -filter {name =~ "DAP*"}
	after 100
	# Configure timestamp generator to run global timer gracefully
	# Ideally these registers should be set from bootloader (cdo)

	mwr -force 0xea470020 100000000
	mwr -force 0xea470000 0x1
	after 100

	rpu0_core0_rst

	after 100
	dow -force $elf_file
	con
	exit
}

load_image {*}$argv
