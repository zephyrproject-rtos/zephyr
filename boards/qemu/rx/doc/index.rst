.. zephyr:board:: qemu_rx

Overview
********

This board configuration will use QEMU to emulate the Renesas RXv1 platform.

This configuration provides support for the R5F562N8 MCU and below devices:

* On-chip memory (ROM 512KB, RAM 96KB)
* Interrupt Control Unit (ICUa)
* Compare Match Timer x 2CH (CMT0,1)
* Serial Communication Interface x 1CH (SCI0)

Hardware
********

Supported Features
==================

The following hardware features are supported:

+----------------+------------+----------------------+
| Interface      | Controller | Driver/Component     |
+================+============+======================+
| ICU            | on-chip    | interrupt controller |
+----------------+------------+----------------------+
| CMT timer      | on-chip    | system clock         |
+----------------+------------+----------------------+
| SCI UART       | on-chip    | serial port          |
+----------------+------------+----------------------+

The kernel currently does not support other hardware features on this platform.

Devices
========
System Clock
------------

This board configuration uses a system clock frequency of 6 MHz generated by the CMT timer.

Serial Port
-----------

This board configuration uses a single serial communication channel
on the SCI UART channel 0.

Programming and Debugging
*************************

.. zephyr:board-supported-runners::

Use this configuration to run basic Zephyr applications and kernel tests in the QEMU
emulated environment, for example, with the :zephyr:code-sample:`synchronization` sample:

.. zephyr-app-commands::
   :zephyr-app: samples/synchronization
   :host-os: unix
   :board: qemu_rx
   :goals: run

This will build an image with the synchronization sample app, boot it using
QEMU, and display the following console output:

.. code-block:: console

        *** Booting Zephyr OS build v4.1.0-3157-gb30f8b6a7327 ***
        thread_a: Hello World from cpu 0 on qemu_rx!
        thread_b: Hello World from cpu 0 on qemu_rx!
        thread_a: Hello World from cpu 0 on qemu_rx!
        thread_b: Hello World from cpu 0 on qemu_rx!
        thread_a: Hello World from cpu 0 on qemu_rx!
        thread_b: Hello World from cpu 0 on qemu_rx!
        thread_a: Hello World from cpu 0 on qemu_rx!
        thread_b: Hello World from cpu 0 on qemu_rx!
        thread_a: Hello World from cpu 0 on qemu_rx!
        thread_b: Hello World from cpu 0 on qemu_rx!


Exit QEMU by pressing :kbd:`CTRL+A` :kbd:`x`.


References
**********

https://www.qemu.org/
