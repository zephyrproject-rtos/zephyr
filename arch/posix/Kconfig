# General configuration options

# Copyright (c) 2017 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

menu "Native (POSIX) Architecture Options"
	depends on ARCH_POSIX

config ARCH
	default "posix"

config ARCH_POSIX_RECOMMENDED_STACK_SIZE
	int
	default 44 if 64BIT && STACK_SENTINEL
	default 40 if 64BIT
	default 28 if STACK_SENTINEL
	default 24
	help
	  In bytes, stack size for Zephyr threads meant only for the POSIX
	  architecture.
	  (In this architecture only part of the thread status is kept in the Zephyr
	  thread stack, the real stack is the native underlying pthread stack.
	  Therefore the allocated stack can be limited to this size)

config ARCH_POSIX_LIBFUZZER
	bool "Build fuzz test target"
	help
	  Build as an LLVM libfuzzer target. Requires
	  support from the toolchain (currently only clang works, and
	  only on native_sim[//64]), and should normally be used in
	  concert with some of CONFIG_ASAN/UBSAN/MSAN for validation.
	  The application needs to implement the
	  LLVMFuzzerTestOneInput() entry point, which runs in the host
	  environment "outside" the OS.  See Zephyr documentation and
	  sample and https://llvm.org/docs/LibFuzzer.html for more
	  information.

config ARCH_POSIX_TRAP_ON_FATAL
	bool "Raise a SIGTRAP on fatal error"
	help
	  Raise a SIGTRAP signal on fatal error before exiting.
	  This automatically suspends the target if a debugger is attached.

config ARCH_POSIX_FORCE_64BIT_TIME_T
	bool "Set _TIME_BITS=64"
	help
	  This is a workaround option which will force the host glibc to use the 64bit time_t API
	  also when building the 32bit variant for x86.
	  Enabling this option avoids the Y2038 issue.
	  Note only the embedded code time_t is forced to be 64bits.
	  Note this would cause trouble if linking from the embedded side into another pre-compiled
	  library whose interface uses a 32bit time_t.
	  When this option is set you must *not* link to another library in the host side in which the
	  embedded code directly calls any API which uses time_t or a derived type, when that host library
	  has been built with the default time_t size of 32bits. This includes code which may be built
	  with the native_simulator runner, and libraries provided by your OS distribution.
	  Note glibc supports _TIME_BITS since glibc 2.34. Earlier version will just ignore this.
	  This option is only relevant when building with CONFIG_EXTERNAL_LIBC and not setting
	  CONFIG_64BIT.

rsource "Kconfig.natsim_optional"

endmenu
